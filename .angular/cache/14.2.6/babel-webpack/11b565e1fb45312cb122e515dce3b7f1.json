{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retry = void 0;\n\nvar lift_1 = require(\"../util/lift\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nvar identity_1 = require(\"../util/identity\");\n\nvar timer_1 = require(\"../observable/timer\");\n\nvar innerFrom_1 = require(\"../observable/innerFrom\");\n\nfunction retry(configOrCount) {\n  if (configOrCount === void 0) {\n    configOrCount = Infinity;\n  }\n\n  var config;\n\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount\n    };\n  }\n\n  var _a = config.count,\n      count = _a === void 0 ? Infinity : _a,\n      delay = config.delay,\n      _b = config.resetOnSuccess,\n      resetOnSuccess = _b === void 0 ? false : _b;\n  return count <= 0 ? identity_1.identity : lift_1.operate(function (source, subscriber) {\n    var soFar = 0;\n    var innerSub;\n\n    var subscribeForRetry = function () {\n      var syncUnsub = false;\n      innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {\n        if (resetOnSuccess) {\n          soFar = 0;\n        }\n\n        subscriber.next(value);\n      }, undefined, function (err) {\n        if (soFar++ < count) {\n          var resub_1 = function () {\n            if (innerSub) {\n              innerSub.unsubscribe();\n              innerSub = null;\n              subscribeForRetry();\n            } else {\n              syncUnsub = true;\n            }\n          };\n\n          if (delay != null) {\n            var notifier = typeof delay === 'number' ? timer_1.timer(delay) : innerFrom_1.innerFrom(delay(err, soFar));\n            var notifierSubscriber_1 = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {\n              notifierSubscriber_1.unsubscribe();\n              resub_1();\n            }, function () {\n              subscriber.complete();\n            });\n            notifier.subscribe(notifierSubscriber_1);\n          } else {\n            resub_1();\n          }\n        } else {\n          subscriber.error(err);\n        }\n      }));\n\n      if (syncUnsub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        subscribeForRetry();\n      }\n    };\n\n    subscribeForRetry();\n  });\n}\n\nexports.retry = retry;","map":{"version":3,"names":["Object","defineProperty","exports","value","retry","lift_1","require","OperatorSubscriber_1","identity_1","timer_1","innerFrom_1","configOrCount","Infinity","config","count","_a","delay","_b","resetOnSuccess","identity","operate","source","subscriber","soFar","innerSub","subscribeForRetry","syncUnsub","subscribe","createOperatorSubscriber","next","undefined","err","resub_1","unsubscribe","notifier","timer","innerFrom","notifierSubscriber_1","complete","error"],"sources":["/Users/sabina-mariapintilie/Documents/Angular/MagazinOnline/node_modules/rxjs/dist/cjs/internal/operators/retry.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nvar identity_1 = require(\"../util/identity\");\nvar timer_1 = require(\"../observable/timer\");\nvar innerFrom_1 = require(\"../observable/innerFrom\");\nfunction retry(configOrCount) {\n    if (configOrCount === void 0) { configOrCount = Infinity; }\n    var config;\n    if (configOrCount && typeof configOrCount === 'object') {\n        config = configOrCount;\n    }\n    else {\n        config = {\n            count: configOrCount,\n        };\n    }\n    var _a = config.count, count = _a === void 0 ? Infinity : _a, delay = config.delay, _b = config.resetOnSuccess, resetOnSuccess = _b === void 0 ? false : _b;\n    return count <= 0\n        ? identity_1.identity\n        : lift_1.operate(function (source, subscriber) {\n            var soFar = 0;\n            var innerSub;\n            var subscribeForRetry = function () {\n                var syncUnsub = false;\n                innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function (value) {\n                    if (resetOnSuccess) {\n                        soFar = 0;\n                    }\n                    subscriber.next(value);\n                }, undefined, function (err) {\n                    if (soFar++ < count) {\n                        var resub_1 = function () {\n                            if (innerSub) {\n                                innerSub.unsubscribe();\n                                innerSub = null;\n                                subscribeForRetry();\n                            }\n                            else {\n                                syncUnsub = true;\n                            }\n                        };\n                        if (delay != null) {\n                            var notifier = typeof delay === 'number' ? timer_1.timer(delay) : innerFrom_1.innerFrom(delay(err, soFar));\n                            var notifierSubscriber_1 = OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {\n                                notifierSubscriber_1.unsubscribe();\n                                resub_1();\n                            }, function () {\n                                subscriber.complete();\n                            });\n                            notifier.subscribe(notifierSubscriber_1);\n                        }\n                        else {\n                            resub_1();\n                        }\n                    }\n                    else {\n                        subscriber.error(err);\n                    }\n                }));\n                if (syncUnsub) {\n                    innerSub.unsubscribe();\n                    innerSub = null;\n                    subscribeForRetry();\n                }\n            };\n            subscribeForRetry();\n        });\n}\nexports.retry = retry;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}